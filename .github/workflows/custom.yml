on:
  workflow_dispatch:
    inputs:
      version:
        default: 'latest'
        description: 'Package version'
        type: string
        required: true

name: Custom Build

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      build: ${{ steps.check-build.outputs.build }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Version
        id: get-version
        run: |
          version=${{ github.event.inputs.version }}
          echo "version=${version}" >> $GITHUB_ENV
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Check Build
        id: check-build
        run: |
          gh release view ${version} -R ${{ github.repository }} | grep task-runner-launcher-${version}-linux-loong64.tar.gz >/dev/null 2>&1 || echo "build=1" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: check
    runs-on: ubuntu-latest
    if: needs.check.outputs.build == 1
    env:
      version: ${{ needs.check.outputs.version }}
    steps:
      - name: Check Version
        run: |
          echo "Current Version: ${version}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: n8n-io/task-runner-launcher
          ref: ${{ env.version }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Get File
        run: |
          wget -O ../goreleaser.test https://github.com/${{ github.repository }}/raw/refs/heads/main/.goreleaser.yaml

      - name: Build Binary
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --config ../goreleaser.test --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}